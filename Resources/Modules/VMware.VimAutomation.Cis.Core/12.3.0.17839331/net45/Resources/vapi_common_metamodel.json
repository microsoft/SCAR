{"metadata":[{"value":{"metamodel":{"metadata":[],"documentation":"","name":"vapi-std","packages":[{"value":{"metadata":[],"documentation":"The com.vmware.vapi.std.errors package provides the standard errors that can be included in the list of errors in the specification of operations to indicate that the operation might report those errors. It also provides some structures intended to be used as payload to provide additional information about those errors.","name":"com.vmware.vapi.std.errors","structures":[{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The Unauthorized error indicates that the user is not authorized to perform the operation. \n API requests may include a security context containing user credentials. For example, the user credentials could be a SAML token, a user name and password, or the session identifier for a previously established session. Invoking the operation may require that the user identified by those credentials has particular privileges on the operation or on one or more resource identifiers passed to the operation. \n\n Examples: \n\n   - The operation requires that the user have one or more privileges on the operation, but the user identified by the credentials in the security context does not have the required privileges. \n   - The operation requires that the user have one or more privileges on a resource identifier passed to the operation, but the user identified by the credentials in the security context does not have the required privileges. \n  \n \n\n Counterexamples: \n\n   - The SAML token in the request's security context has expired. A Unauthenticated error would be used instead. \n   - The user name and password in the request's security context are invalid. The Unauthenticated error would be used instead. \n   - The session identifier in the request's security context identifies a session that has expired. The Unauthenticated error would be used instead. \n  \n For security reasons, the Error.data field in this error is unset, and the Error.messages field in this error does not disclose why the user is not authorized to perform the operation. For example the messages would not disclose which privilege the user did not have or which resource identifier the user did not have the required privilege to access. The API documentation should indicate what privileges are required.\n","name":"com.vmware.vapi.std.errors.unauthorized","enumerations":[],"constants":[],"type":"ERROR","fields":[{"metadata":[],"documentation":"Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n","name":"messages","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"user_defined_type":{"resource_type":"com.vmware.vapi.structure","resource_id":"com.vmware.vapi.std.localizable_message"},"category":"USER_DEFINED"}}}},{"metadata":[],"documentation":"Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.","name":"data","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"OPTIONAL","element_type":{"builtin_type":"DYNAMIC_STRUCTURE","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.unauthorized"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The FeatureInUse error indicates that an action cannot be completed because a feature is in use. \n Examples: \n\n   - Trying to disable snapshots on a virtual machine which has a snapshot. \n   - Trying to downgrade a license that has licensed features that are in use. \n","name":"com.vmware.vapi.std.errors.feature_in_use","enumerations":[],"constants":[],"type":"ERROR","fields":[{"metadata":[],"documentation":"Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n","name":"messages","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"user_defined_type":{"resource_type":"com.vmware.vapi.structure","resource_id":"com.vmware.vapi.std.localizable_message"},"category":"USER_DEFINED"}}}},{"metadata":[],"documentation":"Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.","name":"data","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"OPTIONAL","element_type":{"builtin_type":"DYNAMIC_STRUCTURE","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.feature_in_use"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The TransientIndication structure indicates whether or not the error is transient. \n Some types of errors are transient in certain situtations and not transient in other situtations. This error payload can be used to indicate to clients whether a particular error is transient. See Error.data.\n","name":"com.vmware.vapi.std.errors.transient_indication","enumerations":[],"constants":[],"type":"STRUCTURE","fields":[{"metadata":[],"documentation":"Indicates that the error this structure is attached to is transient.","name":"is_transient","type":{"builtin_type":"BOOLEAN","category":"BUILTIN"}}]},"key":"com.vmware.vapi.std.errors.transient_indication"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The UnexpectedInput error indicates that the request contained a parameter or field whose name is not known by the server. \n Every operation expects parameters with known names. Some of those parameters may be (or contain) structures, and the operation expects those structures to contain fields with known names. If the operation receives parameters or fields with names that is does not expect, this error may be reported. \n\n This error can be reported by the API infrastructure for any operation, but it is specific to the API infrastructure, and should never be reported by the implementation of any operation. \n\n Examples: \n\n   - A client using stubs generated from the interface specification for version2 of a service invokes the operation passing one or more parameters that were added in version2, but they are communicating with a server that only supports version1 of the service. \n   - A client provides an unexpected parameter or field name when invoking the operation using a dynamic interface (for example REST). \n","name":"com.vmware.vapi.std.errors.unexpected_input","enumerations":[],"constants":[],"type":"ERROR","fields":[{"metadata":[],"documentation":"Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n","name":"messages","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"user_defined_type":{"resource_type":"com.vmware.vapi.structure","resource_id":"com.vmware.vapi.std.localizable_message"},"category":"USER_DEFINED"}}}},{"metadata":[],"documentation":"Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.","name":"data","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"OPTIONAL","element_type":{"builtin_type":"DYNAMIC_STRUCTURE","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.unexpected_input"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The ResourceInUse error indicates that the operation could not be completed because a resource is in use. \n Examples: \n\n   - Trying to remove a VMFS datastore when the is a virtual machine registered on any host attached to the datastore. \n   - Trying to add a virtual switch if the physical network adapter being bridged is already in use. \n  \n Counterexamples: \n\n   - Trying to power off a virtual machine that is in the process of being powered on. The ResourceBusy error would be used instead. \n","name":"com.vmware.vapi.std.errors.resource_in_use","enumerations":[],"constants":[],"type":"ERROR","fields":[{"metadata":[],"documentation":"Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n","name":"messages","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"user_defined_type":{"resource_type":"com.vmware.vapi.structure","resource_id":"com.vmware.vapi.std.localizable_message"},"category":"USER_DEFINED"}}}},{"metadata":[],"documentation":"Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.","name":"data","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"OPTIONAL","element_type":{"builtin_type":"DYNAMIC_STRUCTURE","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.resource_in_use"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The AlreadyInDesiredState error indicates that an attempt to change the state of a resource or service had no effect because the resource or service is already in the desired state. \n Examples: \n\n   - Trying to power on a virtual machine that is already powered on.\n","name":"com.vmware.vapi.std.errors.already_in_desired_state","enumerations":[],"constants":[],"type":"ERROR","fields":[{"metadata":[],"documentation":"Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n","name":"messages","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"user_defined_type":{"resource_type":"com.vmware.vapi.structure","resource_id":"com.vmware.vapi.std.localizable_message"},"category":"USER_DEFINED"}}}},{"metadata":[],"documentation":"Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.","name":"data","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"OPTIONAL","element_type":{"builtin_type":"DYNAMIC_STRUCTURE","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.already_in_desired_state"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The ServiceUnavailable error indicates that the service is unavailable. \n Examples: \n\n   - Attempt to invoke a operation when the server is too busy. \n   - Attempt to invoke a operation when the server is undergoing maintenance. \n   - An operation fails to contact VMware Tools running inside the virtual machine. \n  \n Counterexamples: \n\n   - A client provides an invalid service or operation identifier when invoking the operation using a dynamic interface (for example REST). The OperationNotFound error would be used instead. \n   - A client invokes the operation from the service, but that service has not been installed. The OperationNotFound error would be used instead. \n","name":"com.vmware.vapi.std.errors.service_unavailable","enumerations":[],"constants":[],"type":"ERROR","fields":[{"metadata":[],"documentation":"Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n","name":"messages","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"user_defined_type":{"resource_type":"com.vmware.vapi.structure","resource_id":"com.vmware.vapi.std.localizable_message"},"category":"USER_DEFINED"}}}},{"metadata":[],"documentation":"Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.","name":"data","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"OPTIONAL","element_type":{"builtin_type":"DYNAMIC_STRUCTURE","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.service_unavailable"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The AlreadyExists error indicates that an attempt was made to create an entity but the entity already exists. Typically the entity has a name or identifier that is required to be unique in some context, but there is already an entity with that name or identifier in that context. \n Examples: \n\n   - Trying to create a new tag category when a tag category with the specified name already exists.\n   - Trying to create a new tag in tag category when a tag with the specified name already exists the tag category.\n   - Trying to create a LUN with a specific UUID on a node (for replication purposes) when a LUN with that UUID already exists on the node.\n   - Trying to create a file in a directory or move or copy a file to a directory when a file with that name already exists in the directory. \n","name":"com.vmware.vapi.std.errors.already_exists","enumerations":[],"constants":[],"type":"ERROR","fields":[{"metadata":[],"documentation":"Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n","name":"messages","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"user_defined_type":{"resource_type":"com.vmware.vapi.structure","resource_id":"com.vmware.vapi.std.localizable_message"},"category":"USER_DEFINED"}}}},{"metadata":[],"documentation":"Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.","name":"data","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"OPTIONAL","element_type":{"builtin_type":"DYNAMIC_STRUCTURE","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.already_exists"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The InvalidArgument error indicates that the values received for one or more parameters are not acceptable. \n This error is reported by the API infrastructure, so it could occur in response to the invocation of any operation. It may also be reported as the result of operation-specific validation. \n\n Examples: \n\n   - A parameter has a value that is not of the expected type. \n   - A parameter has a value that is not in the required range. \n   - A parameter has a value that is not one of the specifically allowed strings. \n   - One field of a structure is the tag for a tagged union, and has a specific value but another field of the structure that is required to be specified when the tag has that value is not specified, or another field of the structure that is required to be unspecified when the tag has that value is specified. \n  \n Counterexamples: \n\n   - Trying to create a new tag in tag category when a tag with the specified name already exists the tag category. The AlreadyExists error would be used instead. \n   - Invoke the operation to retrieve information about a virtual machine, passing an id that does not identify an existing virtual machine. The NotFound error would be used instead. \n   - Attempt to put a virtual machine into a folder that can only contain hosts. The InvalidElementType error would be used instead. \n   - Attempt to attach a SCSI virtual disk to an IDE port. The InvalidElementType error would be used instead. \n","name":"com.vmware.vapi.std.errors.invalid_argument","enumerations":[],"constants":[],"type":"ERROR","fields":[{"metadata":[],"documentation":"Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n","name":"messages","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"user_defined_type":{"resource_type":"com.vmware.vapi.structure","resource_id":"com.vmware.vapi.std.localizable_message"},"category":"USER_DEFINED"}}}},{"metadata":[],"documentation":"Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.","name":"data","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"OPTIONAL","element_type":{"builtin_type":"DYNAMIC_STRUCTURE","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.invalid_argument"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The InvalidElementType error indicates that the server was unable to fulfil the request because an element of a specific type cannot be a member of particular group. \n This error could be reported, for example, if an attempt is made to put an element into the wrong type of container. \n\n Examples: \n\n   - Attempt to put a virtual machine into a folder that can only contain hosts. \n   - Attempt to attach a SCSI virtual disk to an IDE port. \n  Counterexamples: \n   - A parameter has a value that is not of the expected type. The InvalidArgument error would be used instead. \n","name":"com.vmware.vapi.std.errors.invalid_element_type","enumerations":[],"constants":[],"type":"ERROR","fields":[{"metadata":[],"documentation":"Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n","name":"messages","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"user_defined_type":{"resource_type":"com.vmware.vapi.structure","resource_id":"com.vmware.vapi.std.localizable_message"},"category":"USER_DEFINED"}}}},{"metadata":[],"documentation":"Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.","name":"data","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"OPTIONAL","element_type":{"builtin_type":"DYNAMIC_STRUCTURE","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.invalid_element_type"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The InvalidRequest error indicates that the request is malformed in such a way that the server is unable to process it. \n Examples: \n\n   - The XML in a SOAP request is not well-formed so the server cannot parse the request. \n   - The XML in a SOAP request is well-formed but does not match the structure required by the SOAP specification. \n   - A JSON-RPC request is not valid JSON. \n   - The JSON sent in a JSON-RPC request is not a valid JSON-RPC Request object. \n   - The Request object from a JSON-RPC request does not match the structure required by the API infrastructure. \n  \n Counterexamples: \n\n   - The parameter has a value that is not with the required range. The InvalidArgument error would be used instead. \n   - The name of the operation specified in the request doesn't not match any known operation. The NotFound error would be used instead. \n  \n Some transport protocols (for example JSON-RPC) include their own mechanism for reporting these kinds of errors, and the API infrastructure for a programming language may expose the errors using a language specific mechanism, so this error might not be used.\n","name":"com.vmware.vapi.std.errors.invalid_request","enumerations":[],"constants":[],"type":"ERROR","fields":[{"metadata":[],"documentation":"Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n","name":"messages","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"user_defined_type":{"resource_type":"com.vmware.vapi.structure","resource_id":"com.vmware.vapi.std.localizable_message"},"category":"USER_DEFINED"}}}},{"metadata":[],"documentation":"Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.","name":"data","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"OPTIONAL","element_type":{"builtin_type":"DYNAMIC_STRUCTURE","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.invalid_request"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The UnableToAllocateResource error indicates that the operation failed because it was unable to allocate or acquire a required resource. \n Examples: \n\n   - Trying to power on a virtual machine when there are not enough licenses to do so. \n   - Trying to power on a virtual machine that would violate a resource usage policy. \n  \n Counterexamples: \n\n   - Trying to power off a virtual machine that is in the process of being powered on. A ResourceBusy error would be used instead. \n   - Trying to remove a VMFS datastore when the is a virtual machine registered on any host attached to the datastore. The ResourceInUse error would be used instead. \n   - Trying to add a virtual switch if the physical network adapter being bridged is already in use. The ResourceInUse error would be used instead. \n   - Attempt to invoke some operation on a virtual machine when the virtual machine's configuration file is not accessible (for example due to a storage APD condition). The ResourceInaccessible error would be used instead. \n","name":"com.vmware.vapi.std.errors.unable_to_allocate_resource","enumerations":[],"constants":[],"type":"ERROR","fields":[{"metadata":[],"documentation":"Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n","name":"messages","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"user_defined_type":{"resource_type":"com.vmware.vapi.structure","resource_id":"com.vmware.vapi.std.localizable_message"},"category":"USER_DEFINED"}}}},{"metadata":[],"documentation":"Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.","name":"data","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"OPTIONAL","element_type":{"builtin_type":"DYNAMIC_STRUCTURE","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.unable_to_allocate_resource"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The TimedOut error indicates that the operation did not complete within the allowed amount of time. The allowed amount of time might be: \n   - provided by the client as an input parameter. \n   - a fixed limit of the service implementation that is a documented part of the contract of the service. \n   - a configurable limit used by the implementation of the service. \n   - a dynamic limit computed by the implementation of the service. \n  The operation may or may not complete after the TimedOut error was reported. \n Examples: \n\n   - The operation was unable to complete within the timeout duration specified by a parameter of the operation. \n  \n Counterexamples: \n\n   - A server implementation that puts requests into a queue before dispatching them might delete a request from the queue if it doesn't get dispatched within n minutes. The ServiceUnavailable error would be used instead. \n","name":"com.vmware.vapi.std.errors.timed_out","enumerations":[],"constants":[],"type":"ERROR","fields":[{"metadata":[],"documentation":"Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n","name":"messages","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"user_defined_type":{"resource_type":"com.vmware.vapi.structure","resource_id":"com.vmware.vapi.std.localizable_message"},"category":"USER_DEFINED"}}}},{"metadata":[],"documentation":"Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.","name":"data","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"OPTIONAL","element_type":{"builtin_type":"DYNAMIC_STRUCTURE","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.timed_out"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"Exception","type":"STRING"},"key":"value"}]},"key":"ErrorType"},{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The Error error describes thefields common to all standard errors. \n This error serves two purposes: \n\n   1. It is the error that clients in many programming languages can catch to handle all standard errors. Typically those clients will display one or more of the localizable messages from Error.messages to a human. \n   2. It is the error that operations can report when they need to report some error, but the error doesn't fit into any other standard error, and in fact the only reasonable way for a client to react to the error is to display the message(s) to a human. \n","name":"com.vmware.vapi.std.errors.error","enumerations":[],"constants":[],"type":"ERROR","fields":[{"metadata":[],"documentation":"Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n","name":"messages","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"user_defined_type":{"resource_type":"com.vmware.vapi.structure","resource_id":"com.vmware.vapi.std.localizable_message"},"category":"USER_DEFINED"}}}},{"metadata":[],"documentation":"Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.","name":"data","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"OPTIONAL","element_type":{"builtin_type":"DYNAMIC_STRUCTURE","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.error"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The FileLocations structure identifies the file(s) that caused the operation to report the error. \n Some types of errors are caused by a problem with one or more files. This structure is intended to be used as the payload to identify those files when the operation reports errors like NotFound. See Error.data.\n","name":"com.vmware.vapi.std.errors.file_locations","enumerations":[],"constants":[],"type":"STRUCTURE","fields":[{"metadata":[],"documentation":"String identifying the file that triggered the error.","name":"primary","type":{"builtin_type":"STRING","category":"BUILTIN"}},{"metadata":[],"documentation":"List (possibly empty) of strings identifying other files that caused the primary file to trigger the error.","name":"secondary","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"builtin_type":"STRING","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.file_locations"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The Canceled error indicates that the operation canceled itself in response to an explicit request to do so. Operations being \"canceled\" for other reasons (for example the client connection was closed, a time out occured, or due to excessive resource consumption) should not report this error. \n Examples: \n\n   - A user is monitoring the progress of the operation in a GUI and sees that it is likely to take longer than he is willing to wait and clicks the cancel button. \n   - A user invokes the operation using a command-line tool and decides that she didn't really want to invoke that operation, and presses CTRL-c. \n  \n Counterexamples: \n\n   - The client's connection to the server was closed. Reporting an error is pointless since the client will not receive the error response because the connection has been closed. \n   - The request is taking longer than some amount of time. The TimedOut error would be reported if the time was specified as part of the input or is documented in the API contract. \n","name":"com.vmware.vapi.std.errors.canceled","enumerations":[],"constants":[],"type":"ERROR","fields":[{"metadata":[],"documentation":"Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n","name":"messages","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"user_defined_type":{"resource_type":"com.vmware.vapi.structure","resource_id":"com.vmware.vapi.std.localizable_message"},"category":"USER_DEFINED"}}}},{"metadata":[],"documentation":"Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.","name":"data","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"OPTIONAL","element_type":{"builtin_type":"DYNAMIC_STRUCTURE","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.canceled"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The ConcurrentChange error indicates that a data structure, entity, or resource has been modified since some earlier point in time. Typically this happens when the client is doing the write portion of a read-modify-write sequence and indicates that it wants the server to notify it if the data in the server has changed after it did the read, so that it can avoid overwriting that change inadvertantly.","name":"com.vmware.vapi.std.errors.concurrent_change","enumerations":[],"constants":[],"type":"ERROR","fields":[{"metadata":[],"documentation":"Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n","name":"messages","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"user_defined_type":{"resource_type":"com.vmware.vapi.structure","resource_id":"com.vmware.vapi.std.localizable_message"},"category":"USER_DEFINED"}}}},{"metadata":[],"documentation":"Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.","name":"data","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"OPTIONAL","element_type":{"builtin_type":"DYNAMIC_STRUCTURE","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.concurrent_change"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The InvalidElementConfiguration error indicates that an attempt to modify the configuration of an element or a group containing the element failed due to the configuraton of the element. A typical case is when the operation is am attempt to change the group membership of the element fails, in which case a configuration change on the element may allow the group membership change to succeed. \n Examples: \n\n   - Attempt to move a host with a fault tolerant virtual machine out of a cluster (i.e. make the host a standalone host). \n   - Attempt to remove a host from a DRS cluster without putting the host into maintenance mode. \n","name":"com.vmware.vapi.std.errors.invalid_element_configuration","enumerations":[],"constants":[],"type":"ERROR","fields":[{"metadata":[],"documentation":"Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n","name":"messages","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"user_defined_type":{"resource_type":"com.vmware.vapi.structure","resource_id":"com.vmware.vapi.std.localizable_message"},"category":"USER_DEFINED"}}}},{"metadata":[],"documentation":"Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.","name":"data","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"OPTIONAL","element_type":{"builtin_type":"DYNAMIC_STRUCTURE","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.invalid_element_configuration"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The ResourceInaccessible error indicates that the operation could not be completed because an entity is not accessible. \n Examples: \n\n   - Attempt to invoke some operation on a virtual machine when the virtual machine's configuration file is not accessible (for example due to a storage APD condition). \n  \n Counterexamples: \n\n   - Attempt to invoke some operation when the server is too busy. The ServiceUnavailable error would be used instead. \n   - Attempt to invoke some operation when the server is undergoing maintenance. The ServiceUnavailable error would be used instead. \n   - Some operation fails to contact VMware Tools running inside the virtual machine. The ServiceUnavailable error would be used instead. \n","name":"com.vmware.vapi.std.errors.resource_inaccessible","enumerations":[],"constants":[],"type":"ERROR","fields":[{"metadata":[],"documentation":"Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n","name":"messages","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"user_defined_type":{"resource_type":"com.vmware.vapi.structure","resource_id":"com.vmware.vapi.std.localizable_message"},"category":"USER_DEFINED"}}}},{"metadata":[],"documentation":"Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.","name":"data","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"OPTIONAL","element_type":{"builtin_type":"DYNAMIC_STRUCTURE","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.resource_inaccessible"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The ArgumentLocations structure describes which part(s) of the input to the operation caused the error. \n Some types of errors are caused by the value of one of the inputs to the operation, possibly due to an interaction with other inputs to the operation. This structure is intended to be used as the payload to identify those inputs when the operation reports errors like InvalidArgument or NotFound. See Error.data.\n","name":"com.vmware.vapi.std.errors.argument_locations","enumerations":[],"constants":[],"type":"STRUCTURE","fields":[{"metadata":[],"documentation":"String describing the location of the input that triggered the error.","name":"primary","type":{"builtin_type":"STRING","category":"BUILTIN"}},{"metadata":[],"documentation":"List (possibly empty) of strings describing the locations of other inputs that caused the the primary input to trigger the error.","name":"secondary","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"builtin_type":"STRING","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.argument_locations"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The NotFound error indicates that a specified element could not be found. \n Examples: \n\n   - Invoke the operation to retrieve information about a virtual machine, passing an id that does not identify an existing virtual machine. \n   - Invoke the operation to modify the configuration of a virtual nic, passing an id that does not identify an existing virtual nic in the specified virtual machine. \n   - Invoke the operation to remove a vswitch, passing an id that does not identify an existing vswitch. \n","name":"com.vmware.vapi.std.errors.not_found","enumerations":[],"constants":[],"type":"ERROR","fields":[{"metadata":[],"documentation":"Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n","name":"messages","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"user_defined_type":{"resource_type":"com.vmware.vapi.structure","resource_id":"com.vmware.vapi.std.localizable_message"},"category":"USER_DEFINED"}}}},{"metadata":[],"documentation":"Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.","name":"data","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"OPTIONAL","element_type":{"builtin_type":"DYNAMIC_STRUCTURE","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.not_found"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The ResourceBusy error indicates that the operation could not be completed because a resource it needs is busy. \n Examples: \n\n   - Trying to power off a virtual machine that is in the process of being powered on. \n  \n Counterexamples: \n\n   - Trying to remove a VMFS datastore when there is a virtual machine registered on any host attached to the datastore. The ResourceInUse error would be used instead. \n","name":"com.vmware.vapi.std.errors.resource_busy","enumerations":[],"constants":[],"type":"ERROR","fields":[{"metadata":[],"documentation":"Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n","name":"messages","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"user_defined_type":{"resource_type":"com.vmware.vapi.structure","resource_id":"com.vmware.vapi.std.localizable_message"},"category":"USER_DEFINED"}}}},{"metadata":[],"documentation":"Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.","name":"data","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"OPTIONAL","element_type":{"builtin_type":"DYNAMIC_STRUCTURE","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.resource_busy"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The NotAllowedInCurrentState error indicates that the requested operation is not allowed with a resource or service in its current state. This could be because the operation is performing a configuration change that is not allowed in the current state or because operation itself is not allowed in the current state. \n Examples: \n\n   - Trying to add a virtual device that cannot be hot plugged to a running virtual machine. \n   - Trying to upgrade the virtual hardware version for a suspended virtual machine. \n   - Trying to power off, reset, or suspend a virtual machine that is not powered on. \n  \n Counterexamples: \n\n   - Trying to power off a virtual machine that is in the process of being powered on. The ResourceBusy error would be used instead. \n","name":"com.vmware.vapi.std.errors.not_allowed_in_current_state","enumerations":[],"constants":[],"type":"ERROR","fields":[{"metadata":[],"documentation":"Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n","name":"messages","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"user_defined_type":{"resource_type":"com.vmware.vapi.structure","resource_id":"com.vmware.vapi.std.localizable_message"},"category":"USER_DEFINED"}}}},{"metadata":[],"documentation":"Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.","name":"data","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"OPTIONAL","element_type":{"builtin_type":"DYNAMIC_STRUCTURE","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.not_allowed_in_current_state"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The Unauthenticated error indicates that the operation requires authentication and the user is not authenticated. \n API requests may include a security context containing user credentials. For example, the user credentials could be a SAML token, a user name and password, or the session identifier for a previously established session. \n\n Examples: \n\n   - The SAML token in the request's security context has expired. \n   - The user name and password in the request's security context are invalid. \n   - The session identifier in the request's security context identifies a session that has expired. \n  Counterexamples: \n   -  The user is authenticated but isn't authorized to perform the requested operation. The Unauthorized error would be used instead. \n  \n For security reasons, the Error.data field in this error is unset, and the Error.messages field in this error does not disclose which part of the security context is correct or incorrect. For example the messages would not disclose whether a username or a password is valid or invalid, but only that a combination of username and password is invalid.\n","name":"com.vmware.vapi.std.errors.unauthenticated","enumerations":[],"constants":[],"type":"ERROR","fields":[{"metadata":[],"documentation":"Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n","name":"messages","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"user_defined_type":{"resource_type":"com.vmware.vapi.structure","resource_id":"com.vmware.vapi.std.localizable_message"},"category":"USER_DEFINED"}}}},{"metadata":[],"documentation":"Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.","name":"data","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"OPTIONAL","element_type":{"builtin_type":"DYNAMIC_STRUCTURE","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.unauthenticated"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The InternalServerError error indicates that the server encounters an unexpected condition that prevented it from fulfilling the request. \n This error is reported by the API infrastructure, so it could occur in response to the invocation of any operation. \n\n Examples: \n\n   - The operation returns a value whose type doesn't match the type type the operation says it should return.\n   - The operation reports an error that is not included in the list of errors the operation says that it can report.\n","name":"com.vmware.vapi.std.errors.internal_server_error","enumerations":[],"constants":[],"type":"ERROR","fields":[{"metadata":[],"documentation":"Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n","name":"messages","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"user_defined_type":{"resource_type":"com.vmware.vapi.structure","resource_id":"com.vmware.vapi.std.localizable_message"},"category":"USER_DEFINED"}}}},{"metadata":[],"documentation":"Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.","name":"data","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"OPTIONAL","element_type":{"builtin_type":"DYNAMIC_STRUCTURE","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.internal_server_error"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The OperationNotFound error indicates that the operation specified in the request could not be found. \n Every API request specifies a service identifier and an operation identifier along with the parameters. If the API infrastructure is unable to find the requested service or operation it reports this error. \n\n This error can be reported by the API infrastructure for any operation, but it is specific to the API infrastructure, and should never be reported by the implementation of any operation. \n\n Examples: \n\n   - A client provides an invalid service or operation identifier when invoking the operation using a dynamic interface (for example REST). \n   - A client invokes the operation from a service, but that service has not been installed. \n  \n Counterexamples: \n\n   - A client invokes a task scheduling operation, but provides an invalid service identifier or operation identifier. The NotFound error would be used instead. \n","name":"com.vmware.vapi.std.errors.operation_not_found","enumerations":[],"constants":[],"type":"ERROR","fields":[{"metadata":[],"documentation":"Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n","name":"messages","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"user_defined_type":{"resource_type":"com.vmware.vapi.structure","resource_id":"com.vmware.vapi.std.localizable_message"},"category":"USER_DEFINED"}}}},{"metadata":[],"documentation":"Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.","name":"data","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"OPTIONAL","element_type":{"builtin_type":"DYNAMIC_STRUCTURE","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.operation_not_found"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The Unsupported error indicates that the operation is not supported by the service. \n Examples: \n\n   - Trying to hot-plug a CPU when the current configuration of the VM does not support hot-plugging of CPUs. \n   - Trying to change the memory size to a value that is not within the acceptable guest memory bounds supported by the virtual machine's host. \n","name":"com.vmware.vapi.std.errors.unsupported","enumerations":[],"constants":[],"type":"ERROR","fields":[{"metadata":[],"documentation":"Stack of one or more localizable messages for human error consumers. \n The message at the top of the stack (first in the list) describes the error from the perspective of the operation the client invoked. Each subsequent message in the stack describes the \"cause\" of the prior message.\n","name":"messages","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"user_defined_type":{"resource_type":"com.vmware.vapi.structure","resource_id":"com.vmware.vapi.std.localizable_message"},"category":"USER_DEFINED"}}}},{"metadata":[],"documentation":"Data to facilitate clients responding to the operation reporting a standard error to indicating that it was unable to complete successfully. \n Operations may provide data that clients can use when responding to errors. Since the data that clients need may be specific to the context of the operation reporting the error, different operations that report the same error may provide different data in the error. The documentation for each each operation will describe what, if any, data it provides for each error it reports. The ArgumentLocations, FileLocations, and TransientIndication structures are intended as possible values for this field. DynamicID may also be useful as a value for this field (although that is not its primary purpose). Some services may provide their own specific structures for use as the value of this field when reporting errors from their operations.\n\nSome operations will not set this field when reporting errors.","name":"data","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"OPTIONAL","element_type":{"builtin_type":"DYNAMIC_STRUCTURE","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.errors.unsupported"}],"enumerations":[],"services":[]},"key":"com.vmware.vapi.std.errors"},{"value":{"metadata":[],"documentation":"The com.vmware.vapi.std package provides standard types that can be used in the interface specification of any service.","name":"com.vmware.vapi.std","structures":[{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The DynamicID structure represents an identifier for a resource of an arbitrary type.","name":"com.vmware.vapi.std.dynamic_ID","enumerations":[],"constants":[],"type":"STRUCTURE","fields":[{"metadata":[],"documentation":"The type of resource being identified (for example com.acme.Person). \n Services that contain operations for creating and deleting resources typically contain a constant specifying the resource type for the resources being created and deleted. The API metamodel metadata services include a service that allows retrieving all the known resource types.\n","name":"type","type":{"builtin_type":"STRING","category":"BUILTIN"}},{"metadata":[{"value":{"elements":[{"value":{"string_value":"type","type":"STRING"},"key":"typeHolder"},{"value":{"list_value":[],"type":"STRING_LIST"},"key":"value"}]},"key":"Resource"}],"documentation":"The identifier for a resource whose type is specified by DynamicID.type.\nWhen clients pass a value of this structure as a parameter, the field DynamicID.type must contain the actual resource type. When operations return a value of this structure as a result, the field DynamicID.type will contain the actual resource type.","name":"id","type":{"builtin_type":"ID","category":"BUILTIN"}}]},"key":"com.vmware.vapi.std.dynamic_ID"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The AuthenticationScheme class defines constants for authentication scheme identifiers for authentication mechanisms present in the vAPI infrastructure shipped by VMware. \n A third party extension can define and implements it's own authentication mechanism and define a constant in a different IDL file.\n","name":"com.vmware.vapi.std.authentication_scheme","enumerations":[],"constants":[{"value":{"documentation":"Indicates that the security context in a request is using username/password based authentication scheme. \n In this scheme, the following pieces of information has to be passed in the SecurityContext structure in the execution context of the request: \n\n   - The scheme identifier - com.vmware.vapi.std.security.user_pass\n   - Username\n   - Password\n  \n Sample security context in JSON format that matches the specification: {\n'schemeId': 'com.vmware.vapi.std.security.user_pass',\n'userName': ....,\n'password': ...\n} \n vAPI runtime provides convenient factory methods that take username and password as input parameters and create a security context that conforms to the above format.\n","type":{"builtin_type":"STRING","category":"BUILTIN"},"value":{"primitive_value":{"string_value":"com.vmware.vapi.std.security.user_pass","type":"STRING"},"category":"PRIMITIVE"}},"key":"USER_PASSWORD"},{"value":{"documentation":"Indicates that the request doesn't need any authentication.","type":{"builtin_type":"STRING","category":"BUILTIN"},"value":{"primitive_value":{"string_value":"com.vmware.vapi.std.security.no_authentication","type":"STRING"},"category":"PRIMITIVE"}},"key":"NO_AUTHENTICATION"},{"value":{"documentation":"Indicates that the security context in a request is using a SAML bearer token based authentication scheme. \n In this scheme, the following pieces of information has to be passed in the SecurityContext structure in the execution context of the request: \n\n   - The scheme identifier: com.vmware.vapi.std.security.saml_bearer_token\n   - The token itself\n  \n Sample security context in JSON format that matches the specification: {\n'schemeId': 'com.vmware.vapi.std.security.saml_bearer_token',\n'token': 'the token itself'\n} vAPI runtime provide convenient factory methods that take SAML bearer token and to create the security context that conforms to the above mentioned format.\n","type":{"builtin_type":"STRING","category":"BUILTIN"},"value":{"primitive_value":{"string_value":"com.vmware.vapi.std.security.saml_bearer_token","type":"STRING"},"category":"PRIMITIVE"}},"key":"SAML_BEARER_TOKEN"},{"value":{"documentation":"Indicates that the security context in a request is using OAuth2 based authentication scheme. \n In this scheme, the following pieces of information has to be passed in the SecurityContext structure in the execution context of the request: \n\n   - The scheme identifier - com.vmware.vapi.std.security.oauth\n   - Valid OAuth2 access token - This is usually acquired by OAuth2 Authorization Server after successful authentication of the end user.\n  \n Sample security context in JSON format that matches the specification: {\n'schemeId': 'com.vmware.vapi.std.security.oauth',\n'accesstoken': ....\n} \n vAPI runtime provides convenient factory methods that takes OAuth2 access token as input parameter and creates a security context that conforms to the above format.\n","type":{"builtin_type":"STRING","category":"BUILTIN"},"value":{"primitive_value":{"string_value":"com.vmware.vapi.std.security.oauth","type":"STRING"},"category":"PRIMITIVE"}},"key":"OAUTH_ACCESS_TOKEN"},{"value":{"documentation":"Indicates that the security context in a request is using a session identifier based authentication scheme. \n In this scheme, the following pieces of information has to be passed in the SecurityContext structure in the execution context of the request: \n\n   - The scheme identifier - com.vmware.vapi.std.security.session_id\n   - Valid session identifier - This is usually returned by a login method of a session manager interface for a particular vAPI service of this authentication scheme\n  Sample security context in JSON format that matches the specification: {\n'schemeId': 'com.vmware.vapi.std.security.session_id',\n'sessionId': ....,\n} vAPI runtime provides convenient factory methods that take session identifier as input parameter and create a security context that conforms to the above format.","type":{"builtin_type":"STRING","category":"BUILTIN"},"value":{"primitive_value":{"string_value":"com.vmware.vapi.std.security.session_id","type":"STRING"},"category":"PRIMITIVE"}},"key":"SESSION_ID"},{"value":{"documentation":"Indicates that the security context in a request is using a SAML holder-of-key token based authentication scheme. \n In this scheme, the following pieces of information has to be passed in the SecurityContext structure in the execution context of the request: \n\n   - The scheme identifier: com.vmware.vapi.std.security.saml_hok_token\n   - Signature of the request: This includes - algorithm used for signing the request, SAML holder of key token and signature digest \n   - Request timestamp: This includes the created and expires timestamp of the request. The timestamp should match the following format - YYYY-MM-DDThh:mm:ss.sssZ (e.g. 1878-03-03T19:20:30.451Z). \n \n Sample security context in JSON format that matches the specification: {\n'schemeId': 'com.vmware.vapi.std.security.saml_hok_token',\n'signature': {\n'alg': 'RS256',\n'samlToken': ...,\n'value': ...,, 'timestamp': { 'created': '2012-10-26T12:24:18.941Z', 'expires': '2012-10-26T12:44:18.941Z', } } } vAPI runtime provide convenient factory methods that take SAML holder of key token and private key to create the security context that conforms to the above mentioned format.\n","type":{"builtin_type":"STRING","category":"BUILTIN"},"value":{"primitive_value":{"string_value":"com.vmware.vapi.std.security.saml_hok_token","type":"STRING"},"category":"PRIMITIVE"}},"key":"SAML_HOK_TOKEN"}],"type":"STRUCTURE","fields":[]},"key":"com.vmware.vapi.std.authentication_scheme"},{"value":{"metadata":[{"value":{"elements":[{"value":{"string_value":"true","type":"STRING"},"key":"value"}]},"key":"Export"}],"documentation":"The LocalizableMessage structure represents a localizable string or message template. Services include one or more localizable message templates in the errors they report so that clients can display diagnostic messages in the native language of the user. Services can include localizable strings in the data returned from operations to allow clients to display localized status information in the native language of the user.","name":"com.vmware.vapi.std.localizable_message","enumerations":[],"constants":[],"type":"STRUCTURE","fields":[{"metadata":[],"documentation":"Unique identifier of the localizable string or message template. \n This identifier is typically used to retrieve a locale-specific string or message template from a message catalog.\n","name":"id","type":{"builtin_type":"STRING","category":"BUILTIN"}},{"metadata":[],"documentation":"The value of this localizable string or message template in the en_US (English) locale. If LocalizableMessage.id refers to a message template, the default message will contain the substituted arguments. This value can be used by clients that do not need to display strings and messages in the native language of the user. It could also be used as a fallback if a client is unable to access the appropriate message catalog.","name":"default_message","type":{"builtin_type":"STRING","category":"BUILTIN"}},{"metadata":[],"documentation":"Arguments to be substituted into a message template.","name":"args","type":{"category":"GENERIC","generic_instantiation":{"generic_type":"LIST","element_type":{"builtin_type":"STRING","category":"BUILTIN"}}}}]},"key":"com.vmware.vapi.std.localizable_message"}],"enumerations":[],"services":[]},"key":"com.vmware.vapi.std"}]}},"key":"vapi-std"}],"version":"1.0"}
